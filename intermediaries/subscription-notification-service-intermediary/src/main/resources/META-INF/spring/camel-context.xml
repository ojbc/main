<?xml version="1.0" encoding="UTF-8"?>
<!--

    Unless explicitly acquired and licensed from Licensor under another license, the contents of
    this file are subject to the Reciprocal Public License ("RPL") Version 1.5, or subsequent
    versions as allowed by the RPL, and You may not copy or use this file in either source code
    or executable form, except in compliance with the terms and conditions of the RPL

    All software distributed under the RPL is provided strictly on an "AS IS" basis, WITHOUT
    WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND LICENSOR HEREBY DISCLAIMS ALL SUCH
    WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
    PARTICULAR PURPOSE, QUIET ENJOYMENT, OR NON-INFRINGEMENT. See the RPL for specific language
    governing rights and limitations under the RPL.

    http://opensource.org/licenses/RPL-1.5

    Copyright 2012-2017 Open Justice Broker Consortium

-->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:camel="http://camel.apache.org/schema/spring"
	xmlns:util="http://www.springframework.org/schema/util" 
	xmlns:wsnb2="http://docs.oasis-open.org/wsn/b-2"
	xmlns:submsg-doc="http://ojbc.org/IEPD/Exchange/SubscriptionMessage/1.0"
	xmlns:submsg-ext="http://ojbc.org/IEPD/Extensions/Subscription/1.0"
	xmlns:notfm-doc="http://ojbc.org/IEPD/Exchange/NotificationMessage/1.0"
	xmlns:notfm-ext="http://ojbc.org/IEPD/Extensions/Notification/1.0"
	xmlns:xop="http://www.w3.org/2004/08/xop/include"
	xmlns:j="http://niem.gov/niem/domains/jxdm/4.1" 
	xmlns:nc20="http://niem.gov/niem/niem-core/2.0"
	xmlns:CHcr-doc="http://ojbc.org/IEPD/Exchange/CriminalHistoryConsolidationReport/1.0"
	xmlns:CHcr-ext="http://ojbc.org/IEPD/Extensions/CriminalHistoryConsolidationReport/Extension/1.0"
	xmlns:nc30="http://release.niem.gov/niem/niem-core/3.0/"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring-3.10.0.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

	<camel:camelContext xmlns="http://camel.apache.org/schema/spring"
		id="subscription-notification-service-intermediary">
		<camel:routeContextRef ref="searchQueryRoutes" />
		<camel:routeContextRef ref="subscriptionSecureRouteContext" />
		<camel:routeContextRef ref="fbiRoutes" />
		<camel:routeContextRef ref="notificationRoutes" />
		<camel:routeContextRef ref="subscriptionMigration" />
  
		<endpoint id="smtpEndpoint"
			uri="${publishSubscribe.smtpFullUrl}" />
		<endpoint id="notificationNonwhitelistFileDrop" uri="file:///${publishSubscribe.notificationNonwhitelistDrop}" />
		<endpoint id="criminalHistoryConsolidationFailedFileEndpoint" uri="file:///${publishSubscribe.criminalHistoryConsolidationFileDrop}/failed" />
		<endpoint id="subscriptionMigrationFileEndpoint" uri="file:///${publishSubscribe.subscriptionMigrationFileDrop}/subscriptionMigration/input" />
		<endpoint id="agencyProfileSeedingFileEndpoint" uri="file:///${publishSubscribe.subscriptionMigrationFileDrop}/agencyProfileSeeding/input" />
		
		<camel:endpoint id="fingerprintRequestFileDropEndpoint"
				uri="file:///${publishSubscribe.fingerPrintsDirectory}/input" />
						
		<camel:endpoint id="fingerprintFileEndpoint"
				uri="file:///${publishSubscribe.fingerPrintsDirectory}/fingerPrints" />
						
		<camel:route>
    
			<camel:from uri="notificationBrokerServiceEndpoint" />

			<camel:log message="This is the operation: ${header.operationName}" />
      <convertBodyTo type="java.lang.String"/>
      <camel:log message="Process notification Request: ${body}" loggingLevel="DEBUG"/>

			<camel:choice>
				<camel:when>
					<camel:simple>${in.header.operationName} == 'Notify'</camel:simple>
					<camel:log message="In notify block" />		      	
					<camel:choice>
						<camel:when>
							<camel:xpath>(normalize-space(//wsnb2:Notify/wsnb2:NotificationMessage/wsnb2:Topic)='topics:person/arrest' and
		      				//wsnb2:Notify/wsnb2:NotificationMessage/wsnb2:Topic/namespace::*[name()='topics']='http://ojbc.org/wsn/topics') or
		      				normalize-space(//wsnb2:Notify/wsnb2:NotificationMessage/wsnb2:Topic)='{http://ojbc.org/wsn/topics}:person/arrest'</camel:xpath>
							<camel:setHeader name="notificationTopic">
								<constant>arrest</constant>
							</camel:setHeader>
						</camel:when>
						<camel:when>
							<camel:xpath>(normalize-space(//wsnb2:Notify/wsnb2:NotificationMessage/wsnb2:Topic)='topics:person/rapback' and
		      				//wsnb2:Notify/wsnb2:NotificationMessage/wsnb2:Topic/namespace::*[name()='topics']='http://ojbc.org/wsn/topics') or
		      				normalize-space(//wsnb2:Notify/wsnb2:NotificationMessage/wsnb2:Topic)='{http://ojbc.org/wsn/topics}:person/rapback'</camel:xpath>
							<camel:setHeader name="notificationTopic">
								<constant>rapback</constant>
							</camel:setHeader>
						</camel:when>
						<camel:when>
							<camel:xpath>(normalize-space(//wsnb2:Notify/wsnb2:NotificationMessage/wsnb2:Topic)='topics:person/incident' and
		      				//wsnb2:Notify/wsnb2:NotificationMessage/wsnb2:Topic/namespace::*[name()='topics']='http://ojbc.org/wsn/topics') or
		      				normalize-space(//wsnb2:Notify/wsnb2:NotificationMessage/wsnb2:Topic)='{http://ojbc.org/wsn/topics}:person/incident'</camel:xpath>
							<camel:setHeader name="notificationTopic">
								<constant>incident</constant>
							</camel:setHeader>
						</camel:when>
						<camel:when>
							<camel:xpath>(normalize-space(//wsnb2:Notify/wsnb2:NotificationMessage/wsnb2:Topic)='topics:person/criminalHistoryCycleTrackingIdentifierAssignment' and
		      				//wsnb2:Notify/wsnb2:NotificationMessage/wsnb2:Topic/namespace::*[name()='topics']='http://ojbc.org/wsn/topics') or
		      				normalize-space(//wsnb2:Notify/wsnb2:NotificationMessage/wsnb2:Topic)='{http://ojbc.org/wsn/topics}:person/criminalHistoryCycleTrackingIdentifierAssignment'</camel:xpath>
							<camel:setHeader name="notificationTopic">
								<constant>criminalHistoryCycleTrackingIdentifierAssignment</constant>
							</camel:setHeader>
						</camel:when>
						<camel:when>
							<camel:xpath>(normalize-space(//wsnb2:Notify/wsnb2:NotificationMessage/wsnb2:Topic)='topics:person/CourtDispositionUpdate' and
		      				//wsnb2:Notify/wsnb2:NotificationMessage/wsnb2:Topic/namespace::*[name()='topics']='http://ojbc.org/wsn/topics') or
		      				normalize-space(//wsnb2:Notify/wsnb2:NotificationMessage/wsnb2:Topic)='{http://ojbc.org/wsn/topics}:person/CourtDispositionUpdate'</camel:xpath>
							<camel:setHeader name="notificationTopic">
								<constant>courtDispositionUpdate</constant>
							</camel:setHeader>
						</camel:when>
						<camel:when>
							<camel:xpath>(normalize-space(//wsnb2:Notify/wsnb2:NotificationMessage/wsnb2:Topic)='topics:person/ProsecutionDecisionUpdate' and
		      				//wsnb2:Notify/wsnb2:NotificationMessage/wsnb2:Topic/namespace::*[name()='topics']='http://ojbc.org/wsn/topics') or
		      				normalize-space(//wsnb2:Notify/wsnb2:NotificationMessage/wsnb2:Topic)='{http://ojbc.org/wsn/topics}:person/ProsecutionDecisionUpdate'</camel:xpath>
							<camel:setHeader name="notificationTopic">
								<constant>prosecutionDecisionUpdate</constant>
							</camel:setHeader>
						</camel:when>
						<camel:when>
							<camel:xpath>(normalize-space(//wsnb2:Notify/wsnb2:NotificationMessage/wsnb2:Topic)='topics:person/VehicleCrash' and
		      				//wsnb2:Notify/wsnb2:NotificationMessage/wsnb2:Topic/namespace::*[name()='topics']='http://ojbc.org/wsn/topics') or
		      				normalize-space(//wsnb2:Notify/wsnb2:NotificationMessage/wsnb2:Topic)='{http://ojbc.org/wsn/topics}:person/vehicleCrash'</camel:xpath>
							<camel:setHeader name="notificationTopic">
								<constant>VehicleCrash</constant>
							</camel:setHeader>
						</camel:when>
						<camel:when>
							<camel:xpath>(normalize-space(//wsnb2:Notify/wsnb2:NotificationMessage/wsnb2:Topic)='topics:person/ncicWarrant' and
		      				//wsnb2:Notify/wsnb2:NotificationMessage/wsnb2:Topic/namespace::*[name()='topics']='http://ojbc.org/wsn/topics') or
		      				normalize-space(//wsnb2:Notify/wsnb2:NotificationMessage/wsnb2:Topic)='{http://ojbc.org/wsn/topics}:person/ncicWarrant'</camel:xpath>
							<camel:setHeader name="notificationTopic">
								<constant>warrantFile</constant>
							</camel:setHeader>
						</camel:when>
						<camel:when>
							<camel:xpath>(normalize-space(//wsnb2:Notify/wsnb2:NotificationMessage/wsnb2:Topic)='topics:person/nletsWarrant' and
		      				//wsnb2:Notify/wsnb2:NotificationMessage/wsnb2:Topic/namespace::*[name()='topics']='http://ojbc.org/wsn/topics') or
		      				normalize-space(//wsnb2:Notify/wsnb2:NotificationMessage/wsnb2:Topic)='{http://ojbc.org/wsn/topics}:person/nletsWarrant'</camel:xpath>
							<camel:setHeader name="notificationTopic">
								<constant>stateWarrantFile</constant>
							</camel:setHeader>
						</camel:when>
						<camel:when>
							<camel:xpath>(normalize-space(//wsnb2:Notify/wsnb2:NotificationMessage/wsnb2:Topic)='topics:person/srfNotification' and
		      				//wsnb2:Notify/wsnb2:NotificationMessage/wsnb2:Topic/namespace::*[name()='topics']='http://ojbc.org/wsn/topics') or
		      				normalize-space(//wsnb2:Notify/wsnb2:NotificationMessage/wsnb2:Topic)='{http://ojbc.org/wsn/topics}:person/srfNotification'</camel:xpath>
							<camel:setHeader name="notificationTopic">
								<constant>SRF</constant>
							</camel:setHeader>
						</camel:when>
						<camel:otherwise>
							<camel:log message="Notification does not contain a valid topic" />
						</camel:otherwise>
					</camel:choice>
					<camel:to uri="direct:processNotification" />
				</camel:when>
				<camel:when>
					<camel:simple>${in.header.operationName} == 'Subscribe'</camel:simple>
					<camel:log message="In subscribe block" />
					<camel:doTry>
						<camel:setHeader name="subscriptionOwner">
							<constant>SYSTEM</constant>
						</camel:setHeader>
						
						<!-- Auto subscriptions don't have an owner email address -->
						<camel:setHeader name="subscriptionOwnerEmailAddress">
							<constant></constant>
						</camel:setHeader>
						<camel:to uri="direct:processSubscription" />
						<camel:doCatch>
							<camel:exception>java.lang.Exception</camel:exception>
							<camel:log message="An exception was thrown: ${exception.stacktrace}" loggingLevel="INFO" />
							<camel:to uri="bean:genericFaultProcessor?method=createFault" />
						</camel:doCatch>
					</camel:doTry>
				</camel:when>

				<camel:when>
					<camel:simple>${in.header.operationName} == 'GetCurrentMessage'</camel:simple>
					<camel:log message="In get current message" />
					<camel:to uri="bean:genericFaultProcessor?method=createFault" />
				</camel:when>

				<camel:when>	      
					<camel:simple>${in.header.operationName} == 'RegisterPublisher'</camel:simple>
					<camel:log message="In register publisher service" />
					<camel:to uri="bean:genericFaultProcessor?method=createFault" />
				</camel:when>
			</camel:choice>
		</camel:route>

		<camel:route id="processSubscriptions">

			<camel:from uri="direct:processSubscription" />

			<transacted ref="txPolicy"/>

			<camel:choice>
				<camel:when>
					<camel:xpath>(normalize-space(//wsnb2:Subscribe/wsnb2:Filter/wsnb2:TopicExpression)='topics:person/arrest' and
	      			//wsnb2:Subscribe/wsnb2:Filter/wsnb2:TopicExpression/namespace::*[name()='topics']='http://ojbc.org/wsn/topics') or 
	      			normalize-space(//wsnb2:Subscribe/wsnb2:Filter/wsnb2:TopicExpression)='{http://ojbc.org/wsn/topics}:person/arrest'</camel:xpath>
					<camel:to uri="direct:processSubscriptionArrest" />
				</camel:when>
				<camel:when>
					<camel:xpath>(normalize-space(//wsnb2:Subscribe/wsnb2:Filter/wsnb2:TopicExpression)='topics:person/rapback' and
	      			//wsnb2:Subscribe/wsnb2:Filter/wsnb2:TopicExpression/namespace::*[name()='topics']='http://ojbc.org/wsn/topics') or 
	      			normalize-space(//wsnb2:Subscribe/wsnb2:Filter/wsnb2:TopicExpression)='{http://ojbc.org/wsn/topics}:person/rapback'</camel:xpath>
					<camel:to uri="direct:processSubscriptionRapback" />
				</camel:when>
				<camel:when>
					<camel:xpath>(normalize-space(//wsnb2:Subscribe/wsnb2:Filter/wsnb2:TopicExpression)='topics:person/incident' and
	      			//wsnb2:Subscribe/wsnb2:Filter/wsnb2:TopicExpression/namespace::*[name()='topics']='http://ojbc.org/wsn/topics') or 
	      			normalize-space(//wsnb2:Subscribe/wsnb2:Filter/wsnb2:TopicExpression)='{http://ojbc.org/wsn/topics}:person/incident'</camel:xpath>
					<camel:to uri="direct:processSubscriptionIncident" />
				</camel:when>
				<camel:when>
					<camel:xpath>(normalize-space(//wsnb2:Subscribe/wsnb2:Filter/wsnb2:TopicExpression)='topics:person/criminalHistoryCycleTrackingIdentifierAssignment' and
	      			//wsnb2:Subscribe/wsnb2:Filter/wsnb2:TopicExpression/namespace::*[name()='topics']='http://ojbc.org/wsn/topics') or 
	      			normalize-space(//wsnb2:Subscribe/wsnb2:Filter/wsnb2:TopicExpression)='{http://ojbc.org/wsn/topics}:person/criminalHistoryCycleTrackingIdentifierAssignment'</camel:xpath>
					<camel:to uri="direct:processSubscriptionChCycle" />
				</camel:when>

				<camel:when>
					<camel:xpath>(normalize-space(//wsnb2:Subscribe/wsnb2:Filter/wsnb2:TopicExpression)='topics:person/CourtDispositionUpdate' and
	      			//wsnb2:Subscribe/wsnb2:Filter/wsnb2:TopicExpression/namespace::*[name()='topics']='http://ojbc.org/wsn/topics') or 
	      			normalize-space(//wsnb2:Subscribe/wsnb2:Filter/wsnb2:TopicExpression)='{http://ojbc.org/wsn/topics}:person/CourtDispositionUpdate'</camel:xpath>
					<camel:to uri="direct:processSubscriptionCourtDispositionUpdate" />
				</camel:when>

				<camel:when>
					<camel:xpath>(normalize-space(//wsnb2:Subscribe/wsnb2:Filter/wsnb2:TopicExpression)='topics:person/ProsecutionDecisionUpdate' and
	      			//wsnb2:Subscribe/wsnb2:Filter/wsnb2:TopicExpression/namespace::*[name()='topics']='http://ojbc.org/wsn/topics') or 
	      			normalize-space(//wsnb2:Subscribe/wsnb2:Filter/wsnb2:TopicExpression)='{http://ojbc.org/wsn/topics}:person/ProsecutionDecisionUpdate'</camel:xpath>
					<camel:to uri="direct:processSubscriptionProsecutionDecisionUpdate" />
				</camel:when>

				<camel:when>
					<camel:xpath>(normalize-space(//wsnb2:Subscribe/wsnb2:Filter/wsnb2:TopicExpression)='topics:person/VehicleCrash' and
	      			//wsnb2:Subscribe/wsnb2:Filter/wsnb2:TopicExpression/namespace::*[name()='topics']='http://ojbc.org/wsn/topics') or 
	      			normalize-space(//wsnb2:Subscribe/wsnb2:Filter/wsnb2:TopicExpression)='{http://ojbc.org/wsn/topics}:person/vehicleCrash'</camel:xpath>
					<camel:to uri="direct:processSubscriptionVehicleCrash" />
					
				</camel:when>
				
				<camel:when>
					<camel:xpath>(normalize-space(//wsnb2:Subscribe/wsnb2:Filter/wsnb2:TopicExpression)='topics:person/ncicWarrant' and
	      			//wsnb2:Subscribe/wsnb2:Filter/wsnb2:TopicExpression/namespace::*[name()='topics']='http://ojbc.org/wsn/topics') or 
	      			normalize-space(//wsnb2:Subscribe/wsnb2:Filter/wsnb2:TopicExpression)='{http://ojbc.org/wsn/topics}:person/ncicWarrant'</camel:xpath>
	      			
	      			<camel:log message="Within Warrant Block" />
	      			
	      			<camel:to uri="direct:processWarrantFile" />
				</camel:when>
					
				<camel:when>
					<camel:xpath>(normalize-space(//wsnb2:Subscribe/wsnb2:Filter/wsnb2:TopicExpression)='topics:person/nletsWarrant' and
	      			//wsnb2:Subscribe/wsnb2:Filter/wsnb2:TopicExpression/namespace::*[name()='topics']='http://ojbc.org/wsn/topics') or 
	      			normalize-space(//wsnb2:Subscribe/wsnb2:Filter/wsnb2:TopicExpression)='{http://ojbc.org/wsn/topics}:person/nletsWarrant'</camel:xpath>
	      			
	      			<camel:log message="Within NLETS Warrant Block" />
	      			
	      			<camel:to uri="direct:processNletsWarrantFile" />
				</camel:when>
				
				<camel:when>
					<camel:xpath>(normalize-space(//wsnb2:Subscribe/wsnb2:Filter/wsnb2:TopicExpression)='topics:person/srfNotification' and
	      			//wsnb2:Subscribe/wsnb2:Filter/wsnb2:TopicExpression/namespace::*[name()='topics']='http://ojbc.org/wsn/topics') or 
	      			normalize-space(//wsnb2:Subscribe/wsnb2:Filter/wsnb2:TopicExpression)='{http://ojbc.org/wsn/topics}:person/srfNotification'</camel:xpath>
	      			
	      			<camel:log message="Within SRF Block" />
	      			
	      			<camel:to uri="direct:processSRF" />
				</camel:when>
				
				<camel:otherwise>
					<camel:log message="Subscription does not contain valid topic" />
					<camel:throwException ref="invalidTopicException" />
				</camel:otherwise>
			</camel:choice>

		</camel:route>

		<camel:route>
    
			<camel:from uri="subscriptionManagerServiceEndpoint" />

			<camel:log message="This is the operation: ${header.operationName}" />

			<camel:choice>
				<camel:when>
					<camel:simple>${in.header.operationName} == 'Unsubscribe'</camel:simple>
					<camel:log message="In unsubscribe block" />

					<camel:setHeader name="subscriptionOwner">
						<constant>SYSTEM</constant>
					</camel:setHeader>

					<camel:to uri="direct:processUnsubscription" />
				</camel:when>
			</camel:choice>
		</camel:route>

		<camel:route id="processUnsubscriptions">
    
			<camel:from uri="direct:processUnsubscription" />
      <camel:convertBodyTo type="java.lang.String"></camel:convertBodyTo>
			<camel:choice>
				<camel:when>
					<camel:xpath>(normalize-space(//wsnb2:Unsubscribe/wsnb2:TopicExpression)='topics:person/arrest' and
	      			//wsnb2:Unsubscribe/wsnb2:TopicExpression/namespace::*[name()='topics']='http://ojbc.org/wsn/topics') or 
	      			normalize-space(//wsnb2:Unsubscribe/wsnb2:TopicExpression)='{http://ojbc.org/wsn/topics}:person/arrest'</camel:xpath>
					<camel:to uri="direct:processUnsubscribeArrest" />
				</camel:when>
				<camel:when>
					<camel:xpath>(normalize-space(//wsnb2:Unsubscribe/wsnb2:TopicExpression)='topics:person/rapback' and
	      			//wsnb2:Unsubscribe/wsnb2:TopicExpression/namespace::*[name()='topics']='http://ojbc.org/wsn/topics') or 
	      			normalize-space(//wsnb2:Unsubscribe/wsnb2:TopicExpression)='{http://ojbc.org/wsn/topics}:person/rapback'</camel:xpath>
					<camel:to uri="direct:processUnsubscribeRapback" />
				</camel:when>
				<camel:when>
					<camel:xpath>(normalize-space(//wsnb2:Unsubscribe/wsnb2:TopicExpression)='topics:person/incident' and
	      			//wsnb2:Unsubscribe/wsnb2:TopicExpression/namespace::*[name()='topics']='http://ojbc.org/wsn/topics') or 
	      			normalize-space(//wsnb2:Unsubscribe/wsnb2:TopicExpression)='{http://ojbc.org/wsn/topics}:person/incident'</camel:xpath>
					<camel:to uri="direct:processUnsubscribeIncident" />
				</camel:when>
				<camel:when>
					<camel:xpath>(normalize-space(//wsnb2:Unsubscribe/wsnb2:TopicExpression)='topics:person/criminalHistoryCycleTrackingIdentifierAssignment' and
	      			//wsnb2:Unsubscribe/wsnb2:TopicExpression/namespace::*[name()='topics']='http://ojbc.org/wsn/topics') or 
	      			normalize-space(//wsnb2:Unsubscribe/wsnb2:TopicExpression)='{http://ojbc.org/wsn/topics}:person/criminalHistoryCycleTrackingIdentifierAssignment'</camel:xpath>
					<camel:to uri="direct:processUnsubscribeChCycle" />
				</camel:when>
				<camel:when>
					<camel:xpath>(normalize-space(//wsnb2:Unsubscribe/wsnb2:TopicExpression)='topics:person/CourtDispositionUpdate' and
	      			//wsnb2:Unsubscribe/wsnb2:TopicExpression/namespace::*[name()='topics']='http://ojbc.org/wsn/topics') or 
	      			normalize-space(//wsnb2:Unsubscribe/wsnb2:TopicExpression)='{http://ojbc.org/wsn/topics}:person/CourtDispositionUpdate'</camel:xpath>
					<camel:to uri="direct:processUnsubscribeCourtDispositionUpdate" />
				</camel:when>
				<camel:when>
					<camel:xpath>(normalize-space(//wsnb2:Unsubscribe/wsnb2:TopicExpression)='topics:person/ProsecutionDecisionUpdate' and
	      			//wsnb2:Unsubscribe/wsnb2:TopicExpression/namespace::*[name()='topics']='http://ojbc.org/wsn/topics') or 
	      			normalize-space(//wsnb2:Unsubscribe/wsnb2:TopicExpression)='{http://ojbc.org/wsn/topics}:person/ProsecutionDecisionUpdate'</camel:xpath>
					<camel:to uri="direct:processUnsubscribeProsecutionDecisionUpdate" />
				</camel:when>
				<camel:when>
					<camel:xpath>(normalize-space(//wsnb2:Unsubscribe/wsnb2:TopicExpression)='topics:person/VehicleCrash' and
	      			//wsnb2:Unsubscribe/wsnb2:TopicExpression/namespace::*[name()='topics']='http://ojbc.org/wsn/topics') or 
	      			normalize-space(//wsnb2:Unsubscribe/wsnb2:TopicExpression)='{http://ojbc.org/wsn/topics}:person/vehicleCrash'</camel:xpath>
					
					<camel:to uri="direct:processUnsubscribeVehicleCrash" />
				</camel:when>
				<camel:otherwise>
					<camel:log message="Unsubscription does not contain valid topic" />
					<camel:to uri="bean:genericFaultProcessor?method=createFault" />
				</camel:otherwise>
			</camel:choice>
		</camel:route>
   
   
		<camel:route id="processSubscriptionArrest_route">
		
			<camel:from uri="direct:processSubscriptionArrest" />
			
			<camel:log message="Processing Subscription (arrest)" />	
								
			<!-- this synchronous call is last because it modifies the message -->
			<to uri="bean:arrestSubscriptionProcessor?method=subscribe" />
														
		</camel:route>
		
		<camel:route id="processSubscriptionRapback_route">
		
			<camel:from uri="direct:processSubscriptionRapback" />
			
			<camel:log message="Processing Subscription (rapback)" />	
			
			<camel:setHeader name="subscriptionRequest">
				<camel:method ref="rapbackSubscriptionProcessor" method="makeSubscriptionRequestFromIncomingMessage"/>
			</camel:setHeader>
								
			<camel:setHeader name="subscriptionId">
				<camel:method ref="subscriptionSearchQueryDAO" method="subscribe"/>
			</camel:setHeader>
			
			<camel:log message="Subscription ID from subscribe method: ${in.headers.subscriptionId}"/>					
								
			<filter>
				<method ref="sendToSubscriptionAdapterStrategy" method="sendToAdapter"/>
				
				<camel:log message="About to send to subscription adapter as per strategy"/>
				
				<camel:wireTap copy="true" uri="direct:sendMessageToSubscriptionAdapter"/>
			</filter>
								
			<camel:choice>
				<camel:when>
					<camel:simple>${bean:fbiSubscriptionProcessor?method=routeToProcessFbiSubscriptionRoute}</camel:simple>
					
					<camel:log message="Process FBI subscription, processor returned true."/>
					
					<to uri="direct:processPotentialFbiSubscription"/>
				</camel:when>			 				 							 																														 				
			</camel:choice>				
			<!-- this synchronous call is last because it modifies the message -->
			<to uri="bean:org.ojbc.intermediaries.sn.util.SubscriptionResponseBuilderUtil?method=createSubscribeResponse()" />
														
		</camel:route>		
		
		<camel:route>
			<camel:from uri="direct:processSubscriptionIncident" />
			<camel:log message="Processing Subscription (incident)" />
			<camel:to uri="bean:incidentSubscriptionProcessor?method=subscribe" />
		</camel:route>

		<camel:route>
			<camel:from uri="direct:processSubscriptionChCycle" />
			<camel:log message="Processing Subscription(ChCycle)" />
			<camel:to uri="bean:chCycleSubscriptionProcessor?method=subscribe" />
		</camel:route>		

		<camel:route>
			<camel:from uri="direct:processSubscriptionCourtDispositionUpdate" />
			<camel:log message="Processing Subscription(Court Disposition Update)" />
			<camel:to uri="bean:courtDispositionUpdateProcessor?method=subscribe" />
		</camel:route>		

		<camel:route>
			<camel:from uri="direct:processSubscriptionProsecutionDecisionUpdate" />
			<camel:log message="Processing Subscription(Prosecution Decision Update)" />
			<camel:to uri="bean:prosecutionDecisionUpdateProcessor?method=subscribe" />
		</camel:route>		

		<camel:route>
			<camel:from uri="direct:processSubscriptionVehicleCrash" />
			<camel:log message="Processing Subscription(Vehicle Crash)" />
			<camel:to uri="bean:vehicleCrashSubscriptionProcessor?method=subscribe" />
		</camel:route>	
		
		<camel:route>
			<camel:from uri="direct:processWarrantFile" />
			<camel:log message="Processing Subscription(Warrant File)" />
			<camel:to uri="bean:warrantFileSubscriptionProcessor?method=subscribe" />
		</camel:route>	
			
		<camel:route>
			<camel:from uri="direct:processNletsWarrantFile" />
			<camel:log message="Processing Subscription(NLETS Warrant File)" />
			<camel:to uri="bean:stateWarrantFileSubscriptionProcessor?method=subscribe" />
		</camel:route>
		
		<camel:route>
			<camel:from uri="direct:processSRF" />
			<camel:log message="Processing SRF" />
			<camel:to uri="bean:srfFileSubscriptionProcessor?method=subscribe" />
		</camel:route>
		<camel:route>
			<camel:from uri="direct:processUnsubscribeArrest" />
			
			<camel:log message="Processing Unsubscription (arrest)" />
						
			<!-- side effect: at end, this call sets exchange body to the unsubscribe response message -->
			<camel:to uri="bean:arrestSubscriptionProcessor?method=unsubscribe" />									
			
		</camel:route>
		
		<camel:route>
			<camel:from uri="direct:processUnsubscribeRapback" />
			
			<camel:log message="Processing Unsubscription (rapback)" />
			
			<camel:choice>
				<camel:when>
					<camel:simple>${bean:fbiSubscriptionProcessor?method=hasFbiSubscription}</camel:simple>
					
					<camel:log message="Subscription has FBI subscription, sending cancellation message"/>
					
					<camel:wireTap uri="direct:processFbiUnsubscription"/>
				</camel:when>
			</camel:choice>
			
			<!-- side effect: at end, this call sets exchange body to the unsubscribe response message -->
			<camel:to uri="bean:rapbackSubscriptionProcessor?method=unsubscribe" />									
			
		</camel:route>		
		
		<camel:route>
			<camel:from uri="direct:processUnsubscribeIncident" />
			<camel:log message="Processing Unsubscription (incident)" />
			<camel:to uri="bean:incidentSubscriptionProcessor?method=unsubscribe" />
		</camel:route>
			
		<camel:route>
			<camel:from uri="direct:processUnsubscribeChCycle" />
			<camel:log message="Processing Unsubscription(ChCycle)" />
			<camel:to uri="bean:chCycleSubscriptionProcessor?method=unsubscribe" />
		</camel:route>

		<camel:route>
			<camel:from uri="direct:processUnsubscribeCourtDispositionUpdate" />
			<camel:log message="Processing Unsubscription (Court Disposition Update)" />
			<camel:to uri="bean:courtDispositionUpdateProcessor?method=unsubscribe" />
		</camel:route>

		<camel:route>
			<camel:from uri="direct:processUnsubscribeProsecutionDecisionUpdate" />
			<camel:log message="Processing Unsubscription(Prosecution Decision Update)" />
			<camel:to uri="bean:prosecutionDecisionUpdateProcessor?method=unsubscribe" />
		</camel:route>
		
		<camel:route>
			<camel:from uri="direct:processUnsubscribeVehicleCrash" />
			<camel:log message="Processing Unsubscription(Vehicle Crash" />
			<camel:to uri="bean:vehicleCrashSubscriptionProcessor?method=unsubscribe" />
		</camel:route>
		
		<camel:route>
			<from uri="direct:sendMessageToSubscriptionAdapter"/>
			
			<camel:filter>
				<camel:simple>${in.header.operationName} == 'Validate'</camel:simple>
				
				<camel:removeHeaders pattern="*" excludePattern="tokenID"/>
				
				<camel:setHeader name="operationName">
		            <constant>Validate</constant>
		        </camel:setHeader>
	        
	    	    <camel:setHeader name="operationNamespace">
	        	    <constant>http://docs.oasis-open.org/wsn/bw-2</constant>
	        	</camel:setHeader>
				
				<camel:to uri="subscriptionManagerAdapterServiceSecureEndpoint"/>
			</camel:filter>

			<camel:filter>
				<camel:simple>${in.header.operationName} == 'Subscribe'</camel:simple>
				
				<camel:removeHeaders pattern="*" excludePattern="tokenID"/>
				
				<camel:setHeader name="operationName">
		            <constant>Subscribe</constant>
	    	    </camel:setHeader>
	        
				<camel:setHeader name="operationNamespace">
					<constant>http://docs.oasis-open.org/wsn/brw-2</constant>
				</camel:setHeader>
							
				<camel:to uri="notificationBrokerServiceAdapterSecureEndpoint"/>
			</camel:filter>
			
		</camel:route>
		
		<camel:route id="fingerprintRequestFileDropRoute">
			<from uri="fingerprintRequestFileDropEndpoint" />			
			<camel:setHeader name="transactionNumber">
				<camel:xpath resultType="java.lang.String">/TransactionNumber</camel:xpath>
			</camel:setHeader>
			<camel:setHeader name="encoded">
				<camel:xpath resultType="java.lang.Boolean">/TransactionNumber/@encoded</camel:xpath>
			</camel:setHeader>
			<camel:to uri="bean:fbiSubscriptionProcessor?method=retrieveFingerprintToFile" />
			<setHeader name="CamelFileName">
				<simple>${header.transactionNumber}_${date:now:yyyyMMdd}_${date:now:HHmmssSS}.xml</simple>
			</setHeader>
			
			<camel:to uri="fingerprintFileEndpoint"></camel:to>
			
		</camel:route>	
		
			
	</camel:camelContext>
</beans>

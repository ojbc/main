<?xml version="1.0" encoding="UTF-8"?>
<!--

    Unless explicitly acquired and licensed from Licensor under another license, the contents of
    this file are subject to the Reciprocal Public License ("RPL") Version 1.5, or subsequent
    versions as allowed by the RPL, and You may not copy or use this file in either source code
    or executable form, except in compliance with the terms and conditions of the RPL

    All software distributed under the RPL is provided strictly on an "AS IS" basis, WITHOUT
    WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND LICENSOR HEREBY DISCLAIMS ALL SUCH
    WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
    PARTICULAR PURPOSE, QUIET ENJOYMENT, OR NON-INFRINGEMENT. See the RPL for specific language
    governing rights and limitations under the RPL.

    http://opensource.org/licenses/RPL-1.5

    Copyright 2012-2017 Open Justice Broker Consortium

-->
<!-- Configures the Camel Context -->

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:camel="http://camel.apache.org/schema/spring"
	xmlns:cxf="http://camel.apache.org/schema/cxf" 
	xmlns:chr-doc="http://ojbc.org/IEPD/Exchange/CriminalHistoryReport/1.0"
	xmlns:crimhistory-update-doc="http://ojbc.org/IEPD/Exchange/CycleTrackingIdentifierAssignmentReport/1.0"
	xmlns:pdr-report-doc="http://ojbc.org/IEPD/Exchange/ProsecutionDecisionRecordingReport/1.0"
	xmlns:cdr-report-doc="http://ojbc.org/IEPD/Exchange/CourtDispositionRecordingReport/1.0"	
	xmlns:chc-report-doc="http://ojbc.org/IEPD/Exchange/CriminalHistoryConsolidationReport/1.0"
	xmlns:che-report-doc="http://ojbc.org/IEPD/Exchange/CriminalHistoryExpungementReport/1.0"
	xmlns:chiu-report-doc="http://ojbc.org/IEPD/Exchange/CriminalHistoryIdentifierUpdateReport/1.0"
	xmlns:chrestoration-report-doc="http://ojbc.org/IEPD/Exchange/CriminalHistoryRestorationReport/1.0"
	xmlns:chid-report-doc="http://ojbc.org/IEPD/Exchange/CriminalHistoryIdentifierDeletionReport/1.0"
	xmlns:chdu-report-doc="http://ojbc.org/IEPD/Exchange/CriminalHistoryDemographicsUpdateReport/1.0"
	xmlns:cdrs-update-doc="http://ojbc.org/IEPD/Exchange/CourtDispositionRecordingStatusUpdate/1.0"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://camel.apache.org/schema/spring https://camel.apache.org/schema/spring/camel-spring-3.11.7.xsd
       http://camel.apache.org/schema/cxf http://camel.apache.org/schema/cxf/camel-cxf.xsd">
       
	<!-- needed cxf imports -->
	<camel:camelContext xmlns="http://camel.apache.org/schema/spring" id="mainCamelContext" streamCache="true">
	
		<camel:endpoint id="criminalHistoryUpdateReportingServiceEndpoint"
			uri="cxf:bean:criminalHistoryUpdateReportingService?dataFormat=PAYLOAD&amp;loggingFeatureEnabled=${criminalHistoryReportingServiceIntermediaryCxflogging}" />

		<camel:endpoint id="criminalHistoryUpdateReportingSSLServiceEndpoint"
			uri="cxf:bean:criminalHistoryUpdateReportingSSLService?dataFormat=PAYLOAD&amp;loggingFeatureEnabled=${criminalHistoryReportingServiceIntermediaryCxflogging}" />
    
    	<camel:endpoint id="notificationBrokerServiceEndpoint" 
    		uri="cxf:bean:notificationBrokerService?synchronous=true&amp;dataFormat=PAYLOAD&amp;loggingFeatureEnabled=${criminalHistoryReportingServiceIntermediaryCxflogging}"/>              
	
		<camel:endpoint id="criminalhistoryUpdateReportingAdapterServiceEndpoint"
			uri="cxf:bean:criminalhistoryUpdateReportingAdapterService?dataFormat=PAYLOAD&amp;loggingFeatureEnabled=${criminalHistoryReportingServiceIntermediaryCxflogging}" />
	
	
		
		<camel:route id="CriminalHistoryUpdateReportingSSLServiceHandlerRoute">
		
			<camel:from uri="criminalHistoryUpdateReportingSSLServiceEndpoint" />
			
			<camel:to uri="direct:processCriminalHistory"/>

		</camel:route>
	
		<camel:route id="CriminalHistoryUpdateReportingServiceHandlerRoute">
		
			<camel:from uri="criminalHistoryUpdateReportingServiceEndpoint" />
			
			<camel:to uri="direct:processCriminalHistory"/>
			
		</camel:route>
		
		<camel:route id="CriminalHistoryUpdateReportingServiceDirectRoute">	
		
			<camel:from uri="direct:processCriminalHistory"/> 
			
			<!-- Connector developed by CHRI does not support ws-addressing -->
			<camel:to uri="bean:criminalHistoryUpdateMessageProcessor?method=processRequestPayload"/>

			<convertBodyTo type="java.lang.String" />

			<!-- Multicast to the core services and member specific routes so each route gets original message -->
			<camel:multicast>
				<camel:pipeline>
					<camel:filter>
						<camel:simple>${properties:criminalHistoryUpdateReportingService.callRapbackAdapter} == true</camel:simple>
						
						<!-- only call criminal history consolidation on these actions -->
						<camel:filter>
							<camel:xpath>/chc-report-doc:CriminalHistoryConsolidationReport
			 							or /che-report-doc:CriminalHistoryExpungementReport
										or /chiu-report-doc:CriminalHistoryIdentifierUpdateReport
										or /chrestoration-report-doc:CriminalHistoryRestorationReport
										or /chid-report-doc:CriminalHistoryIdentifierDeletionReport
										or /chr-doc:CriminalHistoryReport
										or /chdu-report-doc:CriminalHistoryDemographicsUpdateReport
										or /cdrs-update-doc:CourtDispositionRecordingStatusUpdate
							</camel:xpath>
						
							<camel:log message="About to call Criminal History consolidation / rapback for subsequent results update"/>
						
							<camel:to uri="direct:callCriminalHistoryConsolidation"/>
						</camel:filter>
					</camel:filter>	
				</camel:pipeline>	
			
				<camel:pipeline>
					<camel:filter>
						<camel:simple>${properties:criminalHistoryUpdateReportingService.callNotificationBroker} == true</camel:simple>
						
						<!-- only call notification broker on these actions -->
						<camel:filter>
							<camel:xpath>/crimhistory-update-doc:CycleTrackingIdentifierAssignmentReport
										or /cdr-report-doc:CourtDispositionRecordingReport
										or /pdr-report-doc:ProsecutionDecisionRecordingReport
										or /chr-doc:CriminalHistoryReport
							</camel:xpath>
						
							<camel:log message="About to call notification broker endpoint"/>
						
							<camel:to uri="direct:callNotificationBroker"/>
						</camel:filter>
					</camel:filter>	
				</camel:pipeline>

        <camel:pipeline>
          <camel:filter>
            <camel:simple>${properties:criminalHistoryUpdateReportingService.callProsecutionDecisionRecordingAdapter} == true</camel:simple>
      
            <!-- Call prosecution Decision reporting adapter on this action -->
            <camel:filter>
              <camel:xpath>/pdr-report-doc:ProsecutionDecisionRecordingReport</camel:xpath>
      
              <camel:log message="About to call prosecution decision recording endpoint" />
              <camel:to uri="bean:messageProcessor?method=prepareNewExchangeResponseMessage" />
      
              <camel:setHeader name="operationName">
                <constant>ReportProsecutionDecisionRecording</constant>
              </camel:setHeader>
      
              <camel:setHeader name="operationNamespace">
                <constant>http://ojbc.org/Services/WSDL/CriminalHistoryUpdateReportingService/1.0</constant>
              </camel:setHeader>
      
              <camel:to uri="criminalhistoryUpdateReportingAdapterServiceEndpoint" />
            </camel:filter>
          </camel:filter>
        </camel:pipeline>					
				
				<camel:pipeline>
					<camel:to uri="direct:memberSpecificRoutes"/>
				</camel:pipeline>
					
			</camel:multicast>
			

		</camel:route>		
		
		<camel:route id="memberSpecificRoutes">

			<camel:from uri="direct:memberSpecificRoutes"/>
		
			<!-- Set up member specific endpoints -->
			<camel:setHeader name="routingSlipJurisdiction"><simple>{{criminalHistoryUpdateReportingService.camelEndpointsToCall}}</simple></camel:setHeader>

			<camel:filter>
				<camel:simple>${in.headers.routingSlipJurisdiction} != ''</camel:simple>
				
				<camel:log message="About to call member specific routes using this routing slip: ${in.headers.routingSlipJurisdiction}"/>
				
				<camel:recipientList>
					<camel:header>routingSlipJurisdiction</camel:header>
				</camel:recipientList>
			</camel:filter>			
		
		
		</camel:route>

		<camel:route id="callCriminalHistoryConsolidationRoute">
			<from uri="direct:callCriminalHistoryConsolidation"/>
			<to uri="bean:messageProcessor?method=prepareNewExchangeResponseMessage" />         
			
			<camel:filter>
				<camel:xpath>/chc-report-doc:CriminalHistoryConsolidationReport</camel:xpath>
		
				<camel:setHeader name="operationName">
					<constant>ReportCriminalHistoryConsolidation</constant>
				</camel:setHeader>
			</camel:filter>

			<camel:filter>
				<camel:xpath>/che-report-doc:CriminalHistoryExpungementReport</camel:xpath>

				<camel:setHeader name="operationName">
					<constant>ReportCriminalHistoryExpungement</constant>
				</camel:setHeader>
			</camel:filter>
			
			<camel:filter>
				<camel:xpath>/chiu-report-doc:CriminalHistoryIdentifierUpdateReport</camel:xpath>
			
				<camel:setHeader name="operationName">
					<constant>ReportCriminalHistoryIdentifierUpdate</constant>
				</camel:setHeader>
			</camel:filter>

			<camel:filter>
				<camel:xpath>/chrestoration-report-doc:CriminalHistoryRestorationReport</camel:xpath>
			
				<camel:setHeader name="operationName">
					<constant>ReportCriminalHistoryRestoration</constant>
				</camel:setHeader>				
			</camel:filter>

			<camel:filter>
				<camel:xpath>/chr-doc:CriminalHistoryReport</camel:xpath>
			
				<camel:setHeader name="operationName">
					<constant>ReportNewCriminalHistoryEvent</constant>
				</camel:setHeader>				
			</camel:filter>
			
			<camel:filter>
				<camel:xpath>/chdu-report-doc:CriminalHistoryDemographicsUpdateReport</camel:xpath>
			
				<camel:setHeader name="operationName">
					<constant>ReportCriminalHistoryDemographicsUpdate</constant>
				</camel:setHeader>
			</camel:filter>			

			<camel:filter>
				<camel:xpath>/cdrs-update-doc:CourtDispositionRecordingStatusUpdate</camel:xpath>
				
				<camel:log message="Routing court disposition recording status update message"/>
								
				<camel:setHeader name="operationName"><constant>ReportCourtDispositionRecordingStatusUpdate</constant></camel:setHeader>	
			</camel:filter>

			<camel:setHeader name="operationNamespace">
				<constant>http://ojbc.org/Services/WSDL/CriminalHistoryUpdateReportingService/1.0</constant>
			</camel:setHeader>
			
			<camel:to uri="criminalhistoryUpdateReportingAdapterServiceEndpoint"/>
			
		</camel:route>


	    <camel:route id="callNotificationBrokerRoute"> 
			
			<from uri="direct:callNotificationBroker"/>
									
			<camel:log message="Processing Notification Broker Route..."/>
			
			<camel:to uri="bean:cycleIdToNotifXsltParamMapper?method=populateHeaderWithXsltParams" />
			
			<camel:filter>
				<camel:xpath>/crimhistory-update-doc:CycleTrackingIdentifierAssignmentReport</camel:xpath>
				<camel:to uri="xslt:xslt/cycleTrackingIdentifierAssignmentReportToNotifications.xsl"/>
			</camel:filter>

			<camel:filter>
				<camel:xpath>/cdr-report-doc:CourtDispositionRecordingReport</camel:xpath>
				<camel:to uri="xslt:xslt/courtDispositionRecordingReportToNotifications.xsl"/>
			</camel:filter>
			
			<camel:filter>
				<camel:xpath>/pdr-report-doc:ProsecutionDecisionRecordingReport</camel:xpath>
				<camel:to uri="xslt:xslt/prosecutionDecisionRecordingReportToNotifications.xsl"/>
			</camel:filter>
			
			<camel:filter>
				<camel:xpath>/chr-doc:CriminalHistoryReport</camel:xpath>
				<camel:to uri="xslt:xslt/criminalHistoryToNotification.xsl"/>
			</camel:filter>			
			
			<camel:log message="After xslt transformation: \n ${body}" loggingLevel="DEBUG"/>
						
			<!-- Create new exchange using Camel header as the WS Addressing Message ID -->
			<camel:to uri="bean:messageProcessor?method=prepareNewExchangeResponseMessage"/>
						
			<camel:setHeader name="operationName"><constant>Notify</constant></camel:setHeader>	
			<camel:setHeader name="operationNamespace"><constant>http://docs.oasis-open.org/wsn/brw-2</constant></camel:setHeader>
                                      	
		    <camel:to uri="notificationBrokerServiceEndpoint"/>
		        		
		</camel:route>	

	</camel:camelContext>
		
</beans>



<?xml version="1.0" encoding="UTF-8"?>
<!--

    Unless explicitly acquired and licensed from Licensor under another license, the contents of
    this file are subject to the Reciprocal Public License ("RPL") Version 1.5, or subsequent
    versions as allowed by the RPL, and You may not copy or use this file in either source code
    or executable form, except in compliance with the terms and conditions of the RPL

    All software distributed under the RPL is provided strictly on an "AS IS" basis, WITHOUT
    WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND LICENSOR HEREBY DISCLAIMS ALL SUCH
    WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
    PARTICULAR PURPOSE, QUIET ENJOYMENT, OR NON-INFRINGEMENT. See the RPL for specific language
    governing rights and limitations under the RPL.

    http://opensource.org/licenses/RPL-1.5

    Copyright 2012-2017 Open Justice Broker Consortium

-->
<!-- Configures the Camel Context -->

<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:camel="http://camel.apache.org/schema/spring"
    xmlns:lexs="http://usdoj.gov/leisp/lexs/3.1" 
    xmlns:irsp="http://ojbc.org/IEPD/Extensions/IncidentReportStructuredPayload/1.0"
    xmlns:b="http://docs.oasis-open.org/wsn/b-2" 
    xmlns:lexsdigest="http://usdoj.gov/leisp/lexs/digest/3.1"
    xmlns:ar="http://ojbc.org/IEPD/Exchange/ArrestReport/1.0"
    xmlns:lexspd="http://usdoj.gov/leisp/lexs/publishdiscover/3.1"
    xmlns:pidres-doc="http://ojbc.org/IEPD/Exchange/PersonIdentificationResults/1.0"
    xmlns:ident-ext="http://ojbc.org/IEPD/Extensions/IdentificationExtension/1.0"
    xmlns:nc="http://release.niem.gov/niem/niem-core/3.0/"
    xmlns:j="http://release.niem.gov/niem/domains/jxdm/5.0/"
    xsi:schemaLocation="
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
    ">
    <!-- needed cxf imports -->
    <import resource="classpath:META-INF/cxf/cxf.xml" />	
    
    <!-- Error handlers in case of submission errors -->
    <import resource="error-handlers.xml" />
    
    <camel:camelContext xmlns="http://camel.apache.org/schema/spring" id="identification-reporting-service-intermediary" streamCache="true">
        
        <camel:endpoint id="identificationReportingServiceEndpoint"
            uri="cxf:bean:IdentificationReportingService?dataFormat=PAYLOAD&amp;loggingFeatureEnabled={{identificationReportingService.cxflogging}}" />
        
        <camel:endpoint id="identificationRecordingServiceEndpoint"
            uri="cxf:bean:IdentificationRecordingService?dataFormat=PAYLOAD&amp;loggingFeatureEnabled={{identificationReportingService.cxflogging}}" />
        
        <camel:endpoint id="identificationReportingResponseServiceEndpoint"
            uri="cxf:bean:identificationReportingResponseService?dataFormat=PAYLOAD&amp;loggingFeatureEnabled={{identificationReportingService.cxflogging}}" />
        
        <camel:endpoint id="identificationReportingResponseRecipientEndpoint"
            uri="cxf:bean:identificationReportingResponseRecipient?dataFormat=PAYLOAD&amp;loggingFeatureEnabled={{identificationReportingService.cxflogging}}&amp;synchronous=true" />
        
        <camel:endpoint id="arrestReportingServiceEndpoint" 
			uri="cxf:bean:arrestReportingService?dataFormat=PAYLOAD&amp;loggingFeatureEnabled={{identificationReportingService.cxflogging}}" />
		
        
        <!-- Identification Reporting Service Handler -->
        <camel:route id="IdentificationReportingServiceHandlerRoute">
            <camel:from uri="identificationReportingServiceEndpoint" />
            
            <camel:to uri="bean:messageProcessor?method=processRequestPayload"/>
            
            <convertBodyTo type="java.lang.String" />
            
            <camel:choice>
                <camel:when>
                    <camel:simple>${in.header.operationName} == 'ReportPersonStateIdentificationResults'</camel:simple>
                    <camel:wireTap uri="direct:processStateIdentificationResults"></camel:wireTap>
                </camel:when>
            </camel:choice>
            <camel:to uri="bean:identificationReportProcessor?method=setOperationNameAndNamespace"/>
            
            <camel:filter>
                <camel:simple>${in.header.callIdentificationRecordingService} == 'true'</camel:simple>
                <camel:removeHeaders pattern="*" excludePattern="operationName|operationNamespace|CamelDestinationOverrideUrl"></camel:removeHeaders>
                <camel:to uri="direct:callIdentificationRecordingService" />
            </camel:filter>
            
        </camel:route>
        
        <camel:route errorHandlerRef="identifcationReportErrorHandler" id="stateIdentificationReportServiceRoute">
            <camel:from uri="direct:processStateIdentificationResults" />
            
            <camel:filter>
				<camel:xpath>normalize-space(/pidres-doc:PersonStateIdentificationResults/ident-ext:CriminalIdentificationReasonCode) ='CAR' and 
					normalize-space(/pidres-doc:PersonStateIdentificationResults/ident-ext:TransactionCategoryText) !='CRIMINAL-SID-TO-HIJIS' and 
					normalize-space(/pidres-doc:PersonStateIdentificationResults/ident-ext:TransactionCategoryText) !='R-CRIMINAL-SID-TO-HIJIS'
				</camel:xpath>
	            <camel:choice>
	                <camel:when>
	                    <camel:xpath>normalize-space(/pidres-doc:PersonStateIdentificationResults/j:Subject/nc:RoleOfPerson/j:PersonAugmentation/j:PersonStateFingerprintIdentification[ident-ext:FingerprintIdentificationIssuedForCivilPurposeIndicator='true']/nc:IdentificationID) != ''</camel:xpath>
	                    <camel:log message="CAR state identification results for civil message, need to transform it and sent to Arresting Report Service."/>
	                    <camel:to uri="xslt:xsl/arrestReportTransform.xsl"/>
	                    
	                    <camel:log message="About to call Arrest Report Service: ${body}" loggingLevel="INFO"/>
			            <camel:to uri="bean:messageProcessor?method=prepareNewExchangeResponseMessage"/>			
	                    <camel:setHeader name="operationName"><constant>ReportArrest</constant></camel:setHeader>	
						<camel:setHeader name="operationNamespace"><constant>http://ojbc.org/Services/WSDL/ArrestReportingService/1.0</constant></camel:setHeader>			
						<camel:to uri="arrestReportingServiceEndpoint" id="arrestReportingServiceEndpoint"/>
			            <camel:log message="Called Arrest Reporting service" />
	                </camel:when>
	            </camel:choice>
            
            </camel:filter>
            
        </camel:route>
        
        <camel:route errorHandlerRef="identifcationReportErrorHandler" id="CallIdentificationRecordingServiceRoute">
            <camel:from uri="direct:callIdentificationRecordingService" />
            
            <camel:log message="Inside route to call Identification Recording service"/>
            
            <camel:to
                uri="identificationRecordingServiceEndpoint" id="identificationRecordingServiceEndpoint"/>
            <log message="Called Identification Recording service" />
        </camel:route>
        
        <!-- Identification Reporting Service Handler -->
        <camel:route id="identificationReportingResponseHandlerRoute" errorHandlerRef="identifcationReportResponseErrorHandler">
        
            <camel:from uri="identificationReportingResponseServiceEndpoint" />        
        
			<camel:to uri="bean:messageProcessor?method=processRequestPayload"/>			        
            
            <camel:to uri="bean:messageProcessor?method=prepareNewExchangeResponseMessage"/>			
            
            <camel:setHeader name="operationName">
                <camel:simple>{{identificationReportingService.responseRecipientOperationName}}</camel:simple>
            </camel:setHeader>
            <camel:setHeader name="operationNamespace">
                <camel:simple>{{identificationReportingService.responseRecipientServiceNamespace}}</camel:simple>
            </camel:setHeader>
            
            <camel:log message="About to send identification recording response message to {{identificationReportingService.responseRecipientServiceEndpoint}}" />			
            <camel:log message="About to send identification recording response message: ${body}" />			
            
            <camel:to uri="identificationReportingResponseRecipientEndpoint" id="identificationReportingResponseRecipientEndpoint"/>
            <log message="Called {{identificationReportingService.responseRecipientServiceEndpoint}}" />
            
        </camel:route>
        
    </camel:camelContext>
    
</beans>

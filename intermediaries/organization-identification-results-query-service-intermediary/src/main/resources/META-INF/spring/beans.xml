<?xml version="1.0" encoding="UTF-8"?>
<!--

    Unless explicitly acquired and licensed from Licensor under another license, the contents of
    this file are subject to the Reciprocal Public License ("RPL") Version 1.5, or subsequent
    versions as allowed by the RPL, and You may not copy or use this file in either source code
    or executable form, except in compliance with the terms and conditions of the RPL

    All software distributed under the RPL is provided strictly on an "AS IS" basis, WITHOUT
    WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND LICENSOR HEREBY DISCLAIMS ALL SUCH
    WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
    PARTICULAR PURPOSE, QUIET ENJOYMENT, OR NON-INFRINGEMENT. See the RPL for specific language
    governing rights and limitations under the RPL.

    http://opensource.org/licenses/RPL-1.5

    Copyright 2012-2017 Open Justice Broker Consortium

-->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:cxf="http://camel.apache.org/schema/cxf"
	xmlns:oiirq-req-doc="http://ojbc.org/IEPD/Exchange/OrganizationIdentificationInitialResultsQueryRequest/1.0"
	xmlns:oisrq-req-doc="http://ojbc.org/IEPD/Exchange/OrganizationIdentificationSubsequentResultsQueryRequest/1.0" 
	xmlns:intel="http://release.niem.gov/niem/domains/intelligence/3.0/"
	xmlns:nc30="http://release.niem.gov/niem/niem-core/3.0/" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:camel="http://camel.apache.org/schema/spring" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
	   http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
       http://camel.apache.org/schema/cxf http://camel.apache.org/schema/cxf/camel-cxf.xsd
	   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
	   http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
       
       	<!-- Spring Beans -->
	<util:map map-class="java.util.HashMap" id="federatedQueryManager" />

	<bean id="federatedQueryResponseAggregator"
		class="org.ojbc.util.fedquery.processor.FederatedQueryResponseHandlerAggregator">
		<property name="federatedQueryManager">
			<ref bean="federatedQueryManager" />
		</property>
	</bean>

	<bean id="messageProcessor" class="org.ojbc.util.camel.processor.MessageProcessor" />
	
	<!-- Used to retrieve and persist SAML tokens -->
	<bean id="camelSAMLTokenProcessor" class="org.ojbc.util.camel.security.saml.CamelSAMLTokenProcessor">
		<property name="OJBSamlMap" ref="ojbSamlMap"/>
	</bean>
	<bean id="ojbSamlMap" class="org.ojbc.util.camel.security.saml.OJBSamlMap" />
	
	<bean class="org.ojbc.util.camel.security.saml.OJBSamlCallbackHandler" id="ojbSamlCallbackHandler">
		<property name="OJBSamlMap" ref="ojbSamlMap"/>
	</bean>

	<bean id="prepareFederateQueryMessage" class="org.ojbc.util.fedquery.processor.PrepareFederatedQueryMessage">
		<property name="exchangeDestinationLookupStrategy" ref="exchangeDestinationLookupStrategy"/>
	</bean>

   	<bean id="WSAddressingEndpointProcessor" class="org.ojbc.util.camel.processor.WSAddressingEndpointProcessor">
		<property name ="endpointReplyToMap" ref="wsAddressReplyToEndpointMap"/>
	</bean>		

    <bean id="federatedQueryMessageProcessor" class="org.ojbc.util.fedquery.processor.FederatedQueryMessageProcessor">
		<property name="federatedQueryManager">
			<ref bean="federatedQueryManager" />
		</property>
	</bean>
	<bean id="wsAddressingReplyToManager" class="org.ojbc.util.fedquery.processor.WSAddressingReplyToManager">
		<property name="wsAddressingEndpointProcessor" ref="WSAddressingEndpointProcessor"/>
	</bean>
	 
	<bean id="exchangeDestinationLookupStrategy" class="org.ojbc.util.fedquery.processor.RecordSourceExchangeDestinationLookupStrategy">
		<property name="federatedQueryEndpointMap">
			<util:map >
				<entry key="rap-back-data-store" value="identificationResultsQueryRequestServiceAdapterEndpoint" />
			</util:map>	
		</property>

		<property name="adapterURItoAddressMap">
			<util:map >
				<entry key="rap-back-data-store" value="${identificationResultsQueryIntermediary.rapbackDataStoreEndpoint}" />
			</util:map>	
		</property>
  	</bean>

	<util:map map-class="java.util.HashMap" id="wsAddressReplyToEndpointMap">
        <entry key="${identificationResultsQueryIntermediary.presentIdentificationResultsQueryResultEndpoint}" value="presentIdentificationResultsQueryResultServiceEndpoint"/>
  	</util:map>
  	
  	<bean id="queryRequestSQLLoggingProcessor" class="org.ojbc.audit.enhanced.processor.QueryRequestSQLProcessor">
        <property name="enhancedAuditDAO" ref="enhancedAuditDAOImpl"/>
        <property name="userInfoProcessor" ref="userInfoSQLProcessor"/>
    </bean>

  	<bean id="queryResponseSQLLoggingProcessor" class="org.ojbc.audit.enhanced.processor.IdentificationQueryResponseSQLProcessor">
        <property name="enhancedAuditDAO" ref="enhancedAuditDAOImpl"/>
    </bean>

	<bean id="userInfoSQLProcessor" class="org.ojbc.audit.enhanced.processor.UserInfoSQLProcessor">
        <property name="enhancedAuditDAO" ref="enhancedAuditDAOImpl"/>
    </bean>
    
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
 	   <constructor-arg ref="dataSourceEnhancedAudit"/>
	</bean>
	
	<bean id="namedParameterJdbcTemplate" 
      class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
 	   <constructor-arg ref="dataSourceEnhancedAudit"/>
	</bean>
	
	<bean id="groupedExchangeAggregationStrategy" class="org.apache.camel.processor.aggregate.GroupedExchangeAggregationStrategy" />
	
	<bean id="enhancedAuditDAOImpl" class="org.ojbc.audit.enhanced.dao.EnhancedAuditDAOImpl">
		<property name="jdbcTemplate" ref="jdbcTemplate"/>
		<property name="namedParameterJdbcTemplate" ref="namedParameterJdbcTemplate"/>
	</bean>    
    
	<bean id="dataSourceEnhancedAudit" class="org.apache.commons.dbcp2.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${enhancedAudit.dataSource.driverClass}" />
		<property name="url" value="${enhancedAudit.dataSource.jdbcUrl}" />
		<property name="username" value="${enhancedAudit.dataSource.user}" />
		<property name="password" value="${enhancedAudit.dataSource.password}" />
		<property name="initialSize" value="${enhancedAudit.dataSource.minPoolSize}" />
		<property name="maxTotal" value="${enhancedAudit.dataSource.maxPoolSize}" />
		<property name="validationQuery" value="select 1" />
		<property name="testOnBorrow" value="true" />
	</bean>	
	 
</beans>